# Gemini Flow - Docker Compose Configuration
# Sprint 8: System Integration & Developer Experience
#
# Start all services with: docker-compose up
# Stop all services with: docker-compose down

version: '3.8'

services:
  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: gemini-flow-backend
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - NODE_ENV=development
      - API_KEY=${API_KEY:-dev-api-key-change-in-production}
      - CORS_ORIGINS=http://localhost:3000,http://localhost:5173,http://localhost:3001
    volumes:
      - ./backend:/app
      - /app/node_modules
      - backend-data:/app/.data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: gemini-flow-frontend
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:3001/api
      - VITE_WS_URL=ws://localhost:3001/ws
      - VITE_API_KEY=${API_KEY:-dev-api-key-change-in-production}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  backend-data:
    driver: local

networks:
  default:
    name: gemini-flow-network
