{
  "name": "@clduab11/gemini-flow",
  "version": "1.3.2",
  "description": "Revolutionary AI agent swarm coordination platform with Google Services integration, multimedia processing, and production-ready monitoring. Features 8 Google AI services, quantum computing capabilities, and enterprise-grade security.",
  "main": "index.js",
  "type": "module",
  "bin": {
    "gemini-flow": "./bin/gemini-flow",
    "gf": "./bin/gemini-flow"
  },
  "engines": {
    "node": ">=18.0.0 <=24.0.0",
    "npm": ">=8.0.0"
  },
  "scripts": {
    "start": "node index.js",
    "dev": "nodemon index.js",
    "build": "npm run build:cli",
    "build:cli": "npx tsc --project tsconfig.cli.json || npx tsc --allowJs --target ES2020 --module ESNext --outDir dist src/cli/*.ts src/cli/**/*.ts",
    "build:full": "npm run build:consensus && npm run build:benchmarks",
    "build:consensus": "rollup -c rollup.consensus.config.js",
    "build:benchmarks": "rollup -c rollup.benchmarks.config.js",
    "test": "npm run test:unit && npm run test:integration && npm run test:performance",
    "test:unit": "jest --config jest.config.cjs --testPathPattern=unit",
    "test:integration": "jest --config jest.config.cjs --testPathPattern=integration",
    "test:performance": "jest --config jest.config.cjs --testPathPattern=performance --detectOpenHandles",
    "test:google-services": "npm run test:google-services:unit && npm run test:google-services:integration",
    "test:google-services:unit": "jest --config jest.config.cjs --testPathPattern=google-services.*unit",
    "test:google-services:integration": "jest --config jest.config.cjs --testPathPattern=google-services.*integration --detectOpenHandles",
    "test:protocols": "jest --config jest.config.cjs --testPathPattern=protocols --testTimeout=300000",
    "test:integration:live": "jest --config jest.config.cjs --testPathPattern=live-integration --testTimeout=600000",
    "test:performance:google-services": "node src/benchmarks/google-services-performance.js",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "lint": "eslint src tests --ext .js,.ts,.jsx,.tsx",
    "lint:fix": "eslint src tests --ext .js,.ts,.jsx,.tsx --fix",
    "typecheck": "tsc --noEmit",
    "format": "prettier --write \"src/**/*.{js,ts,jsx,tsx,json,md}\" \"tests/**/*.{js,ts,jsx,tsx,json,md}\"",
    "format:check": "prettier --check \"src/**/*.{js,ts,jsx,tsx,json,md}\" \"tests/**/*.{js,ts,jsx,tsx,json,md}\"",
    "clean": "rm -rf dist coverage .nyc_output",
    "consensus:start": "node src/consensus/consensus-coordinator.js",
    "swarm:init": "node src/swarm/swarm-initializer.js",
    "benchmark:google-services": "node src/benchmarks/benchmark-runner.js --mode comprehensive",
    "benchmark:quick": "node src/benchmarks/benchmark-runner.js --mode quick",
    "benchmark:soak": "node src/benchmarks/benchmark-runner.js --mode soak",
    "benchmark:spike": "node src/benchmarks/benchmark-runner.js --mode spike",
    "benchmark:optimization": "node src/benchmarks/benchmark-runner.js --mode optimization",
    "performance:analyze": "node src/benchmarks/performance-optimization-strategies.js",
    "load-test:1k": "node src/benchmarks/load-testing-coordinator.js --scenario concurrent_1k",
    "load-test:10k": "node src/benchmarks/load-testing-coordinator.js --scenario concurrent_10k",
    "load-test:100k": "node src/benchmarks/load-testing-coordinator.js --scenario concurrent_100k",
    "load-test:sustained": "node src/benchmarks/load-testing-coordinator.js --scenario sustained_24h",
    "monitoring:start": "node src/monitoring/performance-monitor.js",
    "grafana:import": "node scripts/import-grafana-dashboard.js",
    "health-check": "node scripts/health-check.js",
    "validate:google-services": "bash scripts/deployment/validate-google-services.sh",
    "drain-queues": "node src/scripts/drain-queues.js",
    "install:enterprise": "npm install --production && npm run build:enterprise",
    "build:enterprise": "npm run build && npm run optimize:enterprise",
    "optimize:enterprise": "node scripts/enterprise-optimization.js",
    "deploy:staging": "npm run build && npm run test && node scripts/deploy.js staging",
    "deploy:production": "npm run build && npm run test && node scripts/deploy.js production",
    "docs:generate": "typedoc --out docs src",
    "docs:serve": "http-server docs -p 8080",
    "security:audit": "npm audit --audit-level moderate",
    "docker:build": "docker build -t gemini-flow:latest .",
    "docker:run": "docker run -p 3000:3000 -p 8080:8080 gemini-flow:latest",
    "kubernetes:deploy": "kubectl apply -f k8s/",
    "postinstall": "node scripts/postinstall.cjs || true",
    "prepare": "husky install || true"
  },
  "keywords": [
    "ai",
    "coordination",
    "consensus",
    "distributed-systems",
    "performance",
    "benchmarking",
    "google-services",
    "load-testing",
    "optimization",
    "monitoring",
    "grafana",
    "prometheus",
    "swarm-intelligence",
    "byzantine-fault-tolerance",
    "raft-consensus",
    "microservices",
    "scalability",
    "real-time",
    "websockets",
    "streaming"
  ],
  "author": "Claude Code <claude@anthropic.com>",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/claude-ai/gemini-flow.git"
  },
  "bugs": {
    "url": "https://github.com/claude-ai/gemini-flow/issues"
  },
  "homepage": "https://github.com/claude-ai/gemini-flow#readme",
  "dependencies": {
    "@google-cloud/aiplatform": "^5.5.0",
    "@google/generative-ai": "^0.24.1",
    "@types/config": "^3.3.3",
    "async": "^3.2.4",
    "axios": "^1.6.0",
    "bcryptjs": "^2.4.3",
    "bull": "^4.12.2",
    "cheerio": "^1.0.0-rc.12",
    "compression": "^1.7.4",
    "config": "^3.3.9",
    "cors": "^2.8.5",
    "crypto-js": "^4.2.0",
    "dotenv": "^16.3.1",
    "eventemitter3": "^5.0.1",
    "express": "^4.18.2",
    "ffmpeg-static": "^5.2.0",
    "google-auth-library": "^10.2.1",
    "helmet": "^7.1.0",
    "ioredis": "^5.3.2",
    "jimp": "^0.22.10",
    "joi": "^17.11.0",
    "jsonwebtoken": "^9.0.2",
    "kafka-node": "^5.0.0",
    "lodash": "^4.17.21",
    "moment": "^2.29.4",
    "mongodb": "^6.2.0",
    "mongoose": "^8.0.1",
    "multer": "^1.4.5-lts.1",
    "node-fetch": "^3.3.2",
    "p-queue": "^7.4.1",
    "p-retry": "^5.1.2",
    "p-timeout": "^6.1.2",
    "pg": "^8.11.3",
    "pino": "^8.16.1",
    "pino-pretty": "^10.2.3",
    "prom-client": "^15.0.0",
    "rate-limiter-flexible": "^4.0.1",
    "redis": "^4.6.10",
    "rxjs": "^7.8.1",
    "sequelize": "^6.35.0",
    "socket.io": "^4.7.4",
    "socket.io-client": "^4.7.4",
    "uuid": "^9.0.1",
    "winston": "^3.17.0",
    "ws": "^8.14.2",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@babel/preset-env": "^7.23.0",
    "@babel/preset-typescript": "^7.23.0",
    "@rollup/plugin-commonjs": "^25.0.7",
    "@rollup/plugin-json": "^6.0.1",
    "@rollup/plugin-node-resolve": "^15.2.3",
    "@rollup/plugin-terser": "^0.4.4",
    "@rollup/plugin-typescript": "^11.1.5",
    "@semantic-release/git": "^10.0.1",
    "@semantic-release/github": "^9.2.1",
    "@types/async": "^3.2.24",
    "@types/bcryptjs": "^2.4.5",
    "@types/express": "^4.17.20",
    "@types/jest": "^29.5.7",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/lodash": "^4.14.201",
    "@types/multer": "^1.4.9",
    "@types/node": "^20.8.9",
    "@types/uuid": "^9.0.6",
    "@types/ws": "^8.5.8",
    "@typescript-eslint/eslint-plugin": "^6.9.1",
    "@typescript-eslint/parser": "^6.9.1",
    "babel-jest": "^29.7.0",
    "commitizen": "^3.0.0",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "cz-conventional-changelog": "^3.0.1",
    "eslint": "^8.53.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-import": "^2.29.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^5.0.1",
    "eslint-plugin-security": "^1.7.1",
    "http-server": "^14.1.1",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "jest-environment-node": "^29.7.0",
    "lint-staged": "^15.0.2",
    "mongodb-memory-server": "^9.0.1",
    "nock": "^13.3.8",
    "nodemon": "^3.0.1",
    "nyc": "^15.1.0",
    "prettier": "^3.0.3",
    "redis-memory-server": "^0.9.0",
    "rollup": "^4.3.0",
    "rollup-plugin-visualizer": "^5.9.2",
    "semantic-release": "^22.0.5",
    "supertest": "^6.3.3",
    "testcontainers": "^10.2.1",
    "ts-jest": "^29.1.1",
    "typedoc": "^0.25.3",
    "typescript": "^5.2.2"
  },
  "optionalDependencies": {
    "canvas": "^2.11.2",
    "puppeteer": "^24.16.2",
    "sharp": "^0.33.0"
  },
  "lint-staged": {
    "*.{js,ts,jsx,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "commitizen",
      "pre-push": "npm run test:unit && npm run lint"
    }
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "browserslist": [
    "node >= 18"
  ],
  "funding": {
    "type": "github",
    "url": "https://github.com/sponsors/claude-ai"
  }
}
