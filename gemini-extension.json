{
  "name": "gemini-flow",
  "displayName": "Gemini Flow - AI Orchestration Platform",
  "version": "1.3.3",
  "description": "Comprehensive AI orchestration platform with 9 MCP servers, agent coordination, and advanced workflow automation",
  "author": "clduab11",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/clduab11/gemini-flow.git"
  },
  "homepage": "https://github.com/clduab11/gemini-flow",
  "keywords": [
    "gemini",
    "ai",
    "mcp",
    "orchestration",
    "agents",
    "workflow",
    "automation",
    "vertex-ai",
    "google-ai"
  ],
  "entryPoint": "extensions/gemini-cli/extension-loader.js",
  "mcpServers": {
    "Redis": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-redis", "redis://localhost:6379"],
      "description": "Redis MCP server for key-value storage and caching"
    },
    "Git Tools": {
      "command": "python3",
      "args": ["-m", "mcp_server_git"],
      "description": "Git operations through MCP protocol"
    },
    "Puppeteer": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-puppeteer"],
      "description": "Browser automation with Puppeteer MCP server"
    },
    "Sequential Thinking": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-sequential-thinking"],
      "description": "Sequential thinking and planning MCP server"
    },
    "Filesystem": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-filesystem", "/Users/chrisdukes/Desktop"],
      "description": "Filesystem operations MCP server"
    },
    "GitHub": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-github"],
      "env": {
        "GITHUB_PERSONAL_ACCESS_TOKEN": "${GITHUB_PERSONAL_ACCESS_TOKEN}"
      },
      "description": "GitHub integration MCP server"
    },
    "Mem0 Memory": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-memory"],
      "description": "Memory management MCP server"
    },
    "Supabase": {
      "command": "npx",
      "args": ["-y", "@supabase/mcp-server-supabase@latest", "--access-token=${SUPABASE_ACCESS_TOKEN}"],
      "env": {
        "SUPABASE_ACCESS_TOKEN": "${SUPABASE_ACCESS_TOKEN}"
      },
      "description": "Supabase database integration MCP server"
    },
    "Omnisearch": {
      "command": "npx",
      "args": ["-y", "mcp-omnisearch"],
      "env": {
        "TAVILY_API_KEY": "${TAVILY_API_KEY}",
        "PERPLEXITY_API_KEY": "${PERPLEXITY_API_KEY}",
        "KAGI_API_KEY": "${KAGI_API_KEY}",
        "JINA_AI_API_KEY": "${JINA_AI_API_KEY}",
        "BRAVE_API_KEY": "${BRAVE_API_KEY}",
        "FIRECRAWL_API_KEY": "${FIRECRAWL_API_KEY}"
      },
      "description": "Multi-source search and research MCP server"
    }
  },
  "customCommands": {
    "hive-mind": {
      "description": "Manage collective intelligence and hive mind operations",
      "handler": "src/cli/commands/hive-mind.js",
      "subcommands": ["init", "spawn", "status", "consensus", "memory", "sync", "stop"]
    },
    "swarm": {
      "description": "Coordinate intelligent agent swarms",
      "handler": "src/cli/commands/swarm.js",
      "subcommands": ["init", "spawn", "status", "monitor", "stop"]
    },
    "agent": {
      "description": "Manage individual AI agents",
      "handler": "src/cli/commands/agent.js",
      "subcommands": ["spawn", "list", "status", "stop", "assign"]
    },
    "memory": {
      "description": "Memory management operations",
      "handler": "src/cli/commands/memory.js",
      "subcommands": ["store", "retrieve", "query", "export", "import", "clear"]
    },
    "task": {
      "description": "Task coordination and management",
      "handler": "src/cli/commands/task.js",
      "subcommands": ["create", "assign", "status", "complete", "list"]
    },
    "sparc": {
      "description": "SPARC mode operations",
      "handler": "src/cli/commands/sparc.js",
      "subcommands": ["init", "specification", "pseudocode", "architecture", "refinement", "completion"]
    },
    "workspace": {
      "description": "Workspace management",
      "handler": "src/cli/commands/workspace.js",
      "subcommands": ["init", "sync", "status", "clean"]
    }
  },
  "contextFiles": [
    "GEMINI.md",
    "gemini-flow.md",
    "README.md",
    "docs/api/**/*.md",
    "docs/architecture/**/*.md"
  ],
  "excludeTools": [],
  "activation": {
    "onInstall": true,
    "onStartup": true,
    "events": ["mcpServerReady", "contextLoaded"]
  },
  "configuration": {
    "type": "object",
    "properties": {
      "enableAllMCPServers": {
        "type": "boolean",
        "default": true,
        "description": "Enable all 9 MCP servers on activation"
      },
      "autoLoadContext": {
        "type": "boolean",
        "default": true,
        "description": "Automatically load GEMINI.md context"
      },
      "defaultAgentCount": {
        "type": "number",
        "default": 5,
        "description": "Default number of agents for swarm operations"
      }
    }
  },
  "dependencies": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  }
}
